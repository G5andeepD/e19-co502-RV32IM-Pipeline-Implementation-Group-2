$date
	Fri May 02 11:14:04 2025
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module IF_ID_reg_tb $end
$var wire 32 ! OUT_PC_PLUS_4 [31:0] $end
$var wire 32 " OUT_INSTRUCTION [31:0] $end
$var reg 1 # CLK $end
$var reg 32 $ INSTRUCTION [31:0] $end
$var reg 32 % PC_PLUS_4 [31:0] $end
$var reg 1 & RESET $end
$scope module if_id_reg_t $end
$var wire 1 # CLK $end
$var wire 32 ' INSTRUCTION [31:0] $end
$var wire 32 ( PC_PLUS_4 [31:0] $end
$var wire 1 & RESET $end
$var reg 32 ) OUT_INSTRUCTION [31:0] $end
$var reg 32 * OUT_PC_PLUS_4 [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 *
b0 )
b0 (
b0 '
1&
b0 %
b0 $
1#
b0 "
b0 !
$end
#40
0#
#80
1#
0&
#120
0#
#160
b1101000 !
b1101000 *
b1100100 "
b1100100 )
1#
b1101000 %
b1101000 (
b1100100 $
b1100100 '
#200
0#
#240
b11001100 !
b11001100 *
b11001000 "
b11001000 )
1#
b11001100 %
b11001100 (
b11001000 $
b11001000 '
#280
0#
#320
b100110000 !
b100110000 *
b100101100 "
b100101100 )
1#
b100110000 %
b100110000 (
b100101100 $
b100101100 '
#360
0#
#400
b110010100 !
b110010100 *
b110010000 "
b110010000 )
1#
b110010100 %
b110010100 (
b110010000 $
b110010000 '
#440
0#
#480
1#
