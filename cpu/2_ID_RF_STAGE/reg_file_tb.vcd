$date
	Fri May 02 08:21:27 2025
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module reg_file_tb $end
$var wire 32 ! DATA_OUT2 [31:0] $end
$var wire 32 " DATA_OUT1 [31:0] $end
$var reg 1 # CLK $end
$var reg 5 $ OUT_ADDR1 [4:0] $end
$var reg 5 % OUT_ADDR2 [4:0] $end
$var reg 1 & RESET $end
$var reg 5 ' WRITE_ADDR [4:0] $end
$var reg 32 ( WRITE_DATA [31:0] $end
$var reg 1 ) WRITE_ENABLE $end
$scope module reg_file_t $end
$var wire 1 # CLK $end
$var wire 32 * DATA_OUT1 [31:0] $end
$var wire 32 + DATA_OUT2 [31:0] $end
$var wire 5 , OUT_ADDR1 [4:0] $end
$var wire 5 - OUT_ADDR2 [4:0] $end
$var wire 1 & RESET $end
$var wire 5 . WRITE_ADDR [4:0] $end
$var wire 32 / WRITE_DATA [31:0] $end
$var wire 1 ) WRITE_ENABLE $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 0
b0 /
b0 .
b0 -
b0 ,
bx +
bx *
0)
b0 (
b0 '
1&
b0 %
b0 $
1#
bx "
bx !
$end
#40
b100000 0
0#
#70
b0 "
b0 *
b0 !
b0 +
#80
1#
0&
#120
0#
#160
1#
b101010 (
b101010 /
b1 '
b1 .
1)
#200
0#
#240
1#
0)
#280
0#
#320
1#
b1 $
b1 ,
#340
b101010 "
b101010 *
#360
0#
#400
1#
#440
0#
#480
1#
b1100100 (
b1100100 /
b10 '
b10 .
1)
#520
0#
#560
1#
0)
#600
0#
#640
1#
b1 %
b1 -
b10 $
b10 ,
#660
b101010 !
b101010 +
b1100100 "
b1100100 *
#680
0#
#720
1#
#760
0#
#800
1#
b1111011 (
b1111011 /
b0 '
b0 .
1)
#840
0#
#880
1#
b0 $
b0 ,
0)
#900
b0 "
b0 *
#920
0#
#960
1#
